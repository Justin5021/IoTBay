/**
 * Author:  Justin
 * Created: Apr 29, 2022
 */

DROP TABLE IF EXISTS USERS CASCADE;
DROP TABLE IF EXISTS STAFF CASCADE;
DROP TABLE IF EXISTS HISTORYLOGS CASCADE;
DROP TABLE IF EXISTS ORDERS CASCADE;
DROP TABLE IF EXISTS PRODUCT CASCADE;
DROP TABLE IF EXISTS ORDERLINE CASCADE;
DROP TABLE IF EXISTS SUPPLIER CASCADE;
DROP TABLE IF EXISTS PAYMENT CASCADE;
DROP TABLE IF EXISTS PAYMENTINFO CASCADE;
DROP TABLE IF EXISTS INVOICE CASCADE;
DROP TABLE IF EXISTS CART CASCADE;

CREATE TABLE USERS (
    UserID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
    FIRSTNAME VARCHAR(50) NOT NULL, 
    LASTNAME VARCHAR(50) NOT NULL, 
    EMAIL VARCHAR(50) NOT NULL, 
    PASSWORD VARCHAR(20) NOT NULL,
    PHONENUMBER INTEGER NOT NULL, 
    STREETNUMBER INTEGER NOT NULL, 
    STREETNAME VARCHAR(50) NOT NULL, 
    STREETTYPE VARCHAR(12) NOT NULL,
    SUBURB VARCHAR(50) NOT NULL, 
    "STATE" VARCHAR(15) NOT NULL, 
    POSTCODE INTEGER NOT NULL, 
    COUNTRY VARCHAR(50) NOT NULL, 
    PRIMARY KEY (USERID)
);

CREATE TABLE STAFF (
    STAFFID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
    FIRSTNAME VARCHAR(50) NOT NULL,
    LASTNAME VARCHAR(50) NOT NULL,
    EMAIL VARCHAR(50) NOT NULL, 
    PASSWORD VARCHAR(20) NOT NULL,
    PHONENUMBER INTEGER NOT NULL,
    COUNTRY VARCHAR(50) NOT NULL,  
    PRIMARY KEY (STAFFID)
    FOREIGN KEY(USERID) REFERENCES USERS(USERID) ON DELETE CASCADE
);

CREATE TABLE HISTORYLOGS(
    HISTORYLOGSID INTEGER, 
    ACTIVITY VARCHAR(15), 
    CURR_TIME TimeStamp,
    PRIMARY KEY (HISTORYLOGSID)
);

CREATE TABLE ORDERS (
    ORDERID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1), 
    USERID INTEGER REFERENCES USERS(USERID), 
    ORDERDATE DATE, 
    ORDERSTATUS VARCHAR(25), 
    PRIMARY KEY (ORDERID)
);

CREATE TABLE PRODUCT (
    PRODUCTID INTEGER NOT NULL, 
    PRODUCTSERIALNUM INTEGER, 
    PRODUCTCATEGORY VARCHAR(50), 
    PRODUCTBRAND VARCHAR(50), 
    PRODUCTNAME VARCHAR(50),
    PRODUCTIMAGE VARCHAR(250), 
    PRIMARY KEY (PRODUCTID)
);

CREATE TABLE ORDERLINE (
    PRODUCTID INTEGER REFERENCES PRODUCT(PRODUCTID), 
    ORDERID INTEGER REFERENCES ORDERS(ORDERID), 
    QTY INTEGER
);

CREATE TABLE SUPPLIER (
    SUPPLIERID INTEGER NOT NULL, 
    SUPPLIERADDRESS VARCHAR(50), 
    SUPPLIERPHONE INTEGER, 
    PRIMARY KEY (SUPPLIERID)
);


CREATE TABLE PAYMENT (
    PAYMENTID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1), 
    ORDERID INTEGER REFERENCES ORDERS(ORDERID),
    PAYMENTINFOID INTEGER REFERENCES PAYMENTINFO(PAYMENTINFOID), 
    UserID INTEGER REFERENCES USERS(UserID), PAYMENTDATE DATE,
    PAYMENTAMOUNT DECIMAL(15,2), 
    PRIMARY KEY (PAYMENTID)
);

CREATE TABLE PAYMENTINFO (
    PAYMENTINFOID INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1), 
    USERID INTEGER REFERENCES USERS(USERID),
    CARDHOLDERNAME VARCHAR(50), 
    CARDNUMBER VARCHAR(20),
    CARDEXPIRYDATE VARCHAR(10), 
    CARDCVC INTEGER, 
    STREETNUMBER INTEGER NOT NULL, 
    STREETNAME VARCHAR(50) NOT NULL, 
    STREETTYPE VARCHAR(12) NOT NULL,
    SUBURB VARCHAR(50) NOT NULL, 
    "STATE" VARCHAR(3) NOT NULL, 
    POSTCODE INTEGER NOT NULL, 
    COUNTRY VARCHAR(50), 
    CREDIT DECIMAL(15,2), 
    ACTIVE VARCHAR(5),
    PRIMARY KEY (PAYMENTINFOID)
);

CREATE TABLE INVOICE (
    INVOICEID INTEGER NOT NULL, 
    PAYMENTID INTEGER REFERENCES PAYMENT(PAYMENTID), 
    ISSUEDATE DATE,
    PRIMARY KEY (INVOICEID)
);

CREATE TABLE CART(
    USERID INTEGER, 
    PRODUCTID INTEGER, 
    PRODUCTSERIALNUMBER INTEGER, 
    PRODUCTCATEGORY VARCHAR(50), 
    PRODUCTBRAND VARCHAR(50), 
    PRODUCTNAME VARCHAR(50), 
    PRODUCTIMAGE VARCHAR(250), 
    PRODUCTQTY INTEGER, 
    PRODUCTPRICE DECIMAL(15,2) DEFAULT 10.00
);